name: Setup Kubernetes Kind Cluster

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io

    - name: Set permissions for kubeconfig
      run: |
        sudo chown -R vscode ~/.kube
        sudo chgrp -R vscode ~/.kube

    - name: Setup Kubernetes Kind Cluster
      run: |
        HOST_IP=`hostname -I | awk '{ print $1 ; exit }'`
        set -euo pipefail
        reg_name='kind-registry'
        reg_port='5000'
        running="$(docker inspect -f '{{.State.Running}}' "${reg_name}" 2>/dev/null || true)"
        if [ "${running}" != 'true' ]; then
          docker run -d --restart=always -p "${reg_port}:5000" --name "${reg_name}" registry:2
        fi
        kind_running="$(docker inspect -f '{{.State.Running}}' "csderanchercaci-control-plane" 2>/dev/null || true)"
        if [ "${kind_running}" != 'true' ]; then
          cat <<EOF | kind create cluster --name csderanchercaci --config=-
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          networking:
            apiServerAddress: "${HOST_IP}"
          nodes:
          - role: control-plane
            extraMounts:
            - hostPath: /workspaces
              containerPath: /workspaces
            extraPortMappings:
            - containerPort: 30000
              hostPort: 9000
              protocol: TCP
          containerdConfigPatches:
          - |-
            [plugins."io.containerd.grpc.v1.cri".registry.mirrors."localhost:${reg_port}"]
              endpoint = ["http://${reg_name}:${reg_port}"]
          EOF
          INPSECT_NETWORK=`docker network inspect kind`
          if [[ "$INPSECT_NETWORK" == *"$reg_name"* ]]; then
            echo "kind network contains ${reg_name} skipping adding"
          fi
        fi
